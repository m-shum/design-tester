@use 'sass:math';
@use './breakpoints.scss' as *;
@use './vars.scss' as *;

$grid-cols: (
  'xs': 1,
  'sm': 4,
  'md': 4,
  'lg': 6,
  'xl': 6,
  'xxl': 8,
);

:root {
  --grid-cols: 1;
  --container-width: 100vw; // Width of page container inc margins
  --grid-gutter: 2rem;
  --margins: calc(var(--base-margin) * 2);
  --total-gutters: calc(var(--grid-gutter) * (var(--grid-cols) - 1));
  --col-width: calc(
    (var(--container-width) - var(--total-gutters) - var(--margins)) /
      var(--grid-cols)
  ); // Omit margins if base-width excludes them
  @each $breakpoint, $cols in $grid-cols {
    @include use-mq($breakpoint) {
      --grid-cols: #{$cols};
    }
  }
}

@mixin get-cols($cols, $property) {
  & {
    #{$property}: calc(
      $cols * var(--col-width) + (($cols - 1) * var(--grid-gutter))
    );
  }

  // TODO: refactor the logic below

  // @each $breakpoint, $max-cols in $grid-cols {
  //   $col-count: $cols;

  //   @if $col-count > $max-cols {
  //     $col-count: $max-cols;
  //   }

  //   @include use-mq($breakpoint) {
  //     & {
  //       #{$property}: calc(
  //         $col-count * var(--col-width) +
  //           (($col-count - 1) * var(--grid-gutter))
  //       );
  //     }
  //   }
  // }
}
